#可解决
中文翻译：
loader： PyiFrozenFinder：健壮化相对路径计算

在为给定路径构造 PyiFrozenFinder 并尝试计算相对于顶级应用目录的路径时，不要完全解析给定路径。相反，尝试使用原始路径和完全解析后的顶级应用目录路径来计算相对路径。

这个改动可以防止我们可能会解析掉那些不属于顶级应用目录的路径中的符号链接；我们只希望确保始终能够匹配顶级应用目录（无论是原始路径还是完全解析后的路径），并计算出相对路径。

解释：
这段话描述的是 PyInstaller 中 PyiFrozenFinder 组件在计算相对路径时的改进，尤其是在应用程序目录结构中涉及符号链接的情况下。具体来说，这个改进是针对 PyInstaller 打包后的程序在运行时如何处理文件路径的。

问题背景：
当 PyInstaller 打包的应用程序在运行时需要计算文件路径时，PyiFrozenFinder 会尝试计算某些路径相对于应用程序的“顶级目录”。
然而，如果路径中包含符号链接（Symbolic Link），且这些链接指向的是顶级目录之外的某个位置，PyInstaller 可能会错误地解析这些符号链接，导致路径计算错误。
解决方案：
现在，PyiFrozenFinder 会避免完全解析给定路径。它将尝试使用原始路径和完全解析后的顶级应用目录路径两者来计算相对路径。
这个方法可以防止错误解析符号链接，确保路径计算是健壮的且正确的。
为什么这个改进重要：
这个改动可以确保无论路径中是否包含符号链接，都能正确计算出相对路径，避免因符号链接而导致的路径错误。
通过这种方式，PyInstaller 可以更稳定地处理路径，尤其是当应用程序结构比较复杂，包含符号链接时。
简单总结：
这个改动的目的是为了防止符号链接引起的路径计算错误，确保在计算相对路径时能稳妥地处理各种路径情况。

#不可解决
还有一些外部问题，比如PyInstaller 无法直接跨平台打包。例如，你需要在 Windows 系统上生成 Windows 的 .exe，在 macOS 上生成 macOS 的可执行文件。
即使使用 --platform 参数，也不能完全解决此问题。PyInstaller 无法直接跨平台打包的核心原因是不同操作系统的文件系统结构、依赖库的不同、二进制文件格式的差异以及硬件架构的不同。因此，PyInstaller 需要在目标平台上运行，才能生成特定平台所需的可执行文件。
或者是一些依赖不兼容问题，又或者当各种库和python更新的时候，pyinstaller不可能第一时间就发布新版本，从而出现各种问题
